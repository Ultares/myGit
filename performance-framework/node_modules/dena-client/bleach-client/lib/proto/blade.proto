
//
// 刀灵相关的协议
//

package Cmd;

import "basetype.proto";
import "bladetype.proto";


/// 发送角色刀灵数据给玩家
message SendBladeList
{
	optional EProtoId	id		=	1		[default = SEND_BLADE_LIST];
	repeated BladeInfo	list	=	2;
}

/// 刀灵强化
message BladeStrengthReq
{
	optional EProtoId	id			=	1		[default = BLADE_STRENGTH_REQ];
	required uint32		bladeid		=	2;		// 刀灵id
	required uint32		times		=	3;		// 强化次数
}

/// 刀灵强化服务器返回
message BladeStrengthRet
{
	optional EProtoId	id			=	1		[default = BLADE_STRENGTH_RET];
	required uint32		bladeid		=	2;
	required uint32		quality		=	3;
	required uint32		strengthlv	=	4;
	required uint32		soulfightsp =   5;		//灵魂热斗灵压
}

/// 刀灵突破
message BladeBreakReq
{
	optional EProtoId	id			=	1		[default = BLADE_BREAK_REQ];
	required uint32		bladeid		=	2;
}

/// 刀灵突破服务器返回
message BladeBreakRet
{
	optional EProtoId	id			=	1		[default = BLADE_BREAK_RET];
	required uint32		bladeid		=	2;
	required uint32		star		=	3;
	required uint32		soulfightsp =   4;		//灵魂热斗灵压
}

/// 切换刀灵
message BladeExchangeReq
{
	optional EProtoId	id			=	1		[default = BLADE_EXCHANGE_REQ];
	required uint32		srcindex	=	2;
	required uint32		dstid		=	3;
}

/// 切换刀灵服务器返回
message BladeExchangeRet
{
	optional EProtoId	id				=	1		[default = BLADE_EXCHANGE_RET];
	required uint32		srcid			=	2;
	required uint32		srcindex		=	3;
	required uint32		dstid			=	4;
	required uint32		dstindex		=	5;
}

/// 抽取刀灵
message BladeLotteryReq
{
	optional EProtoId	id				=	1		[default = BLADE_LOTTERY_REQ];
	required uint32		type			=	2;
}

/// 抽取刀灵服务器返回
message BladeLotteryRet
{
	optional EProtoId	id				=	1		[default = BLADE_LOTTERY_RET];
	required uint32		type			=	2;
}

/// 技能升级
message SkillUpgradeReq
{
	optional EProtoId	id				=	1		[default = SKILL_UPGRADE_REQ];
	required uint32		bladeid			=	2;
	required uint32		skillid			=	3;
}

/// 技能升级服务器返回
message SkillUpgradeRet
{
	optional EProtoId	id				=	1		[default = SKILL_UPGRADE_RET];
	required uint32		bladeid			=	2;
	required uint32		skillid			=	3;
	required uint32		skilllevel		=	4;
}

/// 新增刀灵数据
message NewBladeList
{
	optional EProtoId	id				=	1		[default = NEW_BLADE_LIST];
	repeated uint32		bladelist		=	2;
}

/// 刀灵解放
message BladeLiberationReq
{
	optional EProtoId	id			=	1		[default = BLADE_LIBERATION_REQ];
	required uint32		bladeid		=	2;
	required uint32		nodeid		=	3;
}

/// 刀灵解放服务器返回
message BladeLiberationRet
{
	optional EProtoId	id			=	1		[default = BLADE_LIBERATION_RET];
	required uint32		bladeid		=	2;
	required uint32		nodeid		=	3;
}
