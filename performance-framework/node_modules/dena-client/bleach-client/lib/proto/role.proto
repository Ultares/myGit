
//
// 角色相关的协议
//

package Cmd;

import "basetype.proto";
import "fromtype.proto";
import "roletype.proto";
import "soultype.proto";
import "itemtype.proto";
import "bladetype.proto";

/// 发送角色列表给玩家
message RoleList
{
	optional EProtoId	id			=	1		[default = SEND_ROLE_LIST];
	repeated RoleBase	rolebase	=	2;		//	角色基础信息
}

/// 玩家选择角色上线
message SelectRoleOnline
{
	optional EProtoId	id			=	1		[default = SELECT_ROLE_ONLINE];
	required uint64		roleid		=	2;		// 选择上线的角色id
}

/// 玩家请求创建角色
message CreateRoleReq
{
	optional EProtoId	id			=	1		[default = CREATE_ROLE_REQ];
	required int32		roletype	=	2;		// 创建角色类型
	required string		rolename	=	3;		// 创建角色名称
	optional uint32		sex			=	4;		// 玩家性别
}

/// 创建角色服务器返回
message CreateRoleRet
{
	optional EProtoId	id			=	1		[default = CREATE_ROLE_RET];
	required RoleBase	rolebase	=	2;		// 新角色的基本信息
}

/// 发送角色数据给玩家
message SendRoleData
{
	optional EProtoId	id			=	1		[default = SEND_ROLE_DATA];
	required RoleInfo	roleinfo	=	2;		// 角色初始化数据
}

/// 角色属性变化通知前端
/// ProtoId:ROLE_ATTRCHANGES_S
message RoleAttrChange
{
	optional EProtoId		id			=	1	[default = ROLE_ATTRCHANGES_S];
    repeated RoleAttrPair   changelist  =	2;	// 改变列表
}

/// 获取玩家buff列表
message GetRoleBuffReq
{
    optional EProtoId	id	=	1	[default = ROLE_GETBUFF_C];
}

/// 获取玩家buff列表返回
message GetRoleBuffRet
{
    optional EProtoId	id      =	1	[default = ROLE_GETBUFF_S];
    repeated BuffUnit   list    =	2;
}

//炼金机请求
message GoldMachineReq
{
    optional EProtoId	id				= 1		[default = GOLD_MACHINE_C];
}

//炼金机返回
message GoldMachineRet 
{
    optional EProtoId	id				= 1		[default = GOLD_MACHINE_S];
	optional uint32		goldnum			= 2;	//获取的金币数	
	optional uint32		criticalrate	= 3;	//暴击率 1表示不暴击
}

//购买体力请求
message BuyEnergyReq
{
    optional EProtoId	id      =	1		[default = BUY_ENERGY_C];
}

//购买体力返回
message BuyEnergyRet 
{
    optional EProtoId	id      =	1		[default = BUY_ENERGY_S];
	optional uint32		energy	=	2;		//获取的体力数	
}

message RoleChangeNickReq
{
	optional EProtoId	id		=	1		[default = ROLE_CHANGE_NICK];
	required string		name	=	2;		//昵称
}

message BuyUseMbReq 
{
	optional EProtoId	id				=	1		[default = BUY_USE_MB_C];
	optional string		transactionId	=	2;
	optional uint32		itemid			=	3;		//购买的商品id
}

message BuyUseMbRet 
{
	optional EProtoId	id		=	1		[default = BUY_USE_MB_S];
	optional uint32		itemid	=	2;		//购买的商品id
}
