package msg.team;

import "teamtype.proto";
import "base.proto";

//
// 命令字定义
//

enum MessageTeam
{
	eMessageTeam_GetTeamInfo_C					= 0x1601;				// 获取组队信息请求
	eMessageTeam_GetTeamInfo_S					= 0x1602;				// 获取组队信息回应
	eMessageTeam_CreatetTeam_C					= 0x1603;				// 创建队伍请求
	eMessageTeam_CreatetTeam_S					= 0x1604;				// 创建队伍回应
	eMessageTeam_JoinTeam_C						= 0x1605;				// 加入队伍请求
	eMessageTeam_JoinTeam_S 					= 0x1606;				// 加入队伍回应
	eMessageTeam_FastJoinTeam_C					= 0x1607;				// 快速加入队伍请求
	eMessageTeam_FastJoinTeam_S 				= 0x1608;				// 快速加入队伍回应
	eMessageTeam_LeaveTeam_C					= 0x1609;				// 离开队伍请求
	eMessageTeam_LeaveTeam_S					= 0x160A;				// 离开队伍回应
	eMessageTeam_SetFormation_C					= 0x160B;				// 设置队伍阵型请求
	eMessageTeam_SetFormation_S 				= 0x160C;				// 设置队伍阵型回应
	eMessageTeam_ChooseHero_C					= 0x160D;				// 选择出站英雄请求
	eMessageTeam_ChooseHero_S 					= 0x160E;				// 选择出站英雄回应
	eMessageTeam_NotifyMemberInfo_S				= 0x160F;				// 通知队员变更信息
	eMessageTeam_GotReward_C 					= 0x1610;				// 领取奖励请求
	eMessageTeam_GotReward_S 					= 0x1611;				// 领取奖励回应
	eMessageTeam_NotifyBattleTimes 				= 0x1612;				// 通知战斗次数
	eMessageTeam_NotifyBattleTime 				= 0x1613;				// 通知战斗时间
};

//
// 错误码定义
//

enum ErrorcodeTeam
{
	eErrorcodeTeam_Success                      = 0x000000;				// 成功

	eErrorcodeTeam_CreateInTeam 				= 0x160301;				// 你需要离开当前队伍
	eErrorcodeTeam_CreateInvalidTarget 			= 0x160302;				// 队伍攻击目标非法
	eErrorcodeTeam_CreateInnerError 			= 0x160303;				// 创建队伍内部错误
	eErrorcodeTeam_NotOpen 						= 0x160304;				// 系统暂未开放

	eErrorcodeTeam_JoinInTeam 					= 0x160501;				// 你需要离开当前队伍
	eErrorcodeTeam_JoinInvalidTeam 				= 0x160502;				// 该队伍已经不存在
	eErrorcodeTeam_JoinFull 					= 0x160503;				// 该队伍已经没有空位

	eErrorcodeTeam_FastJoinInTeam 				= 0x160701;				// 你需要离开当前队伍
	eErrorcodeTeam_FastJoinInvalidTarget 		= 0x160702;				// 队伍攻击目标非法
	eErrorcodeTeam_FastJoinNoTeam 				= 0x160703;				// 没有匹配到目标队伍

	eErrorcodeTeam_LeaveNotInTeam 				= 0x160901;				// 不在任何队伍中
	eErrorcodeTeam_LeaveInnerError 				= 0x160902;				// 离开队伍内部错误
	eErrorcodeTeam_LeaveCanNot 	 				= 0x160903;				// 不能离开队伍

	eErrorcodeTeam_FormationNotInTeam 			= 0x160B01;				// 不在任何队伍中
	eErrorcodeTeam_FormationInnerError 			= 0x160B02;				// 设置队伍阵型内部错误
	eErrorcodeTeam_FormationInValidID 			= 0x160B03;				// 阵型中含有非法的队员id

	eErrorcodeTeam_ChooseNotInTeam 				= 0x160D01;				// 不在任何队伍中
	eErrorcodeTeam_ChooseHeroNot 	 			= 0x160D02;				// 英雄未招募
	eErrorcodeTeam_ChooseHeroNotIn				= 0x160D03;				// 请选择出站的英雄
	eErrorcodeTeam_ChooseInnerError				= 0x160D04;				// 选择英雄内部错误

	eErrorcodeTeam_GotNotInTeam 				= 0x161001;				// 不在任何队伍中
	eErrorcodeTeam_GotInnerError				= 0x161002;				// 组队领取奖励内部错误
	eErrorcodeTeam_GotNotMoney 					= 0x161003;				// 魂玉不足，请充值
	eErrorcodeTeam_GotNotBag					= 0x161004;				// 背包不足
	eErrorcodeTeam_GotOver 						= 0x161005;				// 奖励已经领取完了哦
};

// 获取组队信息
message MessageGetTeamInfoRequest
{
	optional MessageTeam 	id 					= 1 [ default = eMessageTeam_GetTeamInfo_C ];
};
message MessageGetTeamInfoResponse
{
	optional MessageTeam 	id 					= 1 [ default = eMessageTeam_GetTeamInfo_S ];
	required uint64 		teamid 				= 2;					// 队伍id
	repeated uint32     	targetlist 			= 3;					// 目标列表
	optional uint64 		leader				= 4;					// 队长角色id
	repeated Member 		memberList			= 5;					// 队员列表
	optional uint64 		battletime 			= 6;					// 上次战斗时间
	repeated uint64 		formation 			= 7;					// 阵型
	optional uint32 		target				= 8;					// 队伍目标
};

// 创建队伍
message MessageCreateTeamRequest
{
	optional MessageTeam 	id 					= 1 [ default = eMessageTeam_CreatetTeam_C ];
	required uint32 		heroid 				= 2;					// 英雄id
};
message MessageCreateTeamResponse
{
	optional MessageTeam 	id 					= 1 [ default = eMessageTeam_CreatetTeam_S ];
	required uint64 		teamid 				= 2;					// 队伍id
	required uint32 		target 				= 3;					// 队伍目标
};

// 加入队伍
message MessageJoinTeamRequest
{
	optional MessageTeam 	id 					= 1 [ default = eMessageTeam_JoinTeam_C ];
	required uint64 		teamid 				= 2;					// 队伍id
};
message MessageJoinTeamResponse
{
	optional MessageTeam 	id 					= 1 [ default = eMessageTeam_JoinTeam_S ];
	required uint64 		teamid 				= 2;					// 队伍id
	required uint32 		target 				= 3;					// 队伍目标
};

// 快速加入队伍
message MessageFastJoinTeamRequest
{
	optional MessageTeam 	id 					= 1 [ default = eMessageTeam_FastJoinTeam_C ];
	required uint32 		heroid 				= 2;					// 英雄id
};
message MessageFastJoinTeamResponse
{
	optional MessageTeam 	id 					= 1 [ default = eMessageTeam_FastJoinTeam_S ];
	required uint64 		teamid 				= 2;					// 队伍id
	required uint32 		target 				= 3;					// 队伍目标
};

// 离开队伍
message MessageLeaveTeamRequest
{
	optional MessageTeam 	id 					= 1 [ default = eMessageTeam_LeaveTeam_C ];
};
message MessageLeaveTeamResponse
{
	optional MessageTeam 	id 					= 1 [ default = eMessageTeam_LeaveTeam_S ];
	repeated uint32         targetlist          = 2;                    // 目标列表
};

// 设置阵型
message MessageSetFormationRequest
{
	optional MessageTeam 	id 					= 1 [ default = eMessageTeam_SetFormation_C ];
	repeated uint64 		formation			= 2;					// 阵型
};
message MessageSetFormationResponse
{
	optional MessageTeam 	id 					= 1 [ default = eMessageTeam_SetFormation_S ];
};

// 选择出站英雄
message MessageChooseHeroRequest
{
	optional MessageTeam 	id 					= 1 [ default = eMessageTeam_ChooseHero_C ];
	required uint32 		heroid 				= 2;					// 英雄id
};
message MessageChooseHeroResponse
{
	optional MessageTeam 	id 					= 1 [ default = eMessageTeam_ChooseHero_S ];
};

// 同步成员信息
message MessageNotifyMemberInfo
{
	optional MessageTeam 	id 					= 1 [ default = eMessageTeam_NotifyMemberInfo_S ];
	required uint64 		leader 				= 2;					// 队长
	repeated Member 		memberList 			= 3;					// 成员列表
	repeated uint64 		formation 			= 4;					// 整型
};

// 领取奖励
message MessageGotRewardRequest
{
	optional MessageTeam    id 					= 1 [ default = eMessageTeam_GotReward_C ];
};
message MessageGotRewardResponse
{
	optional MessageTeam 	id 					= 1 [ default = eMessageTeam_GotReward_S ];
	required Resource 		reward 				= 2;						// 奖励
};

// 通知战斗次数
message MessageNotifyBattleTimes
{
	optional MessageTeam 	id 					= 1 [ default = eMessageTeam_NotifyBattleTimes ];
	required uint64 		roleid 				= 2;						// 角色id
	required uint32 		times 				= 3;						// 战斗次数
};

// 通知战斗时间
message MessageNotifyBattleTime
{
	optional MessageTeam 	id 					= 1 [ default = eMessageTeam_NotifyBattleTime ];
	required uint64 		time 				= 2;						// 战斗时间
};
