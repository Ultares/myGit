package msg.activity;

import "base.proto";

//
// 命令字定义
//

enum MessageActivity
{
	eMessageActivity_GetActivityList_C				= 0x2101;		// 获取活动列表
	eMessageActivity_GetActivityList_S 				= 0x2102;		// 获取活动列表回应
	eMessageActivity_BuyGoldExpTimes_C				= 0x2103;		// 购买金钱经验活动次数
	eMessageActivity_BuyGoldExpTimes_S				= 0x2104;		// 购买金钱经验活动次数回应
	eMessageActivity_AnswerActivityList_C			= 0x2105;		// 答题活动列表请求
	eMessageActivity_AnswerActivityList_S			= 0x2106;		// 答题活动列表回应
	eMessageActivity_AnswerActivity_C				= 0x2107;		// 答题请求
	eMessageActivity_AnswerActivity_S				= 0x2108;		// 答题成功
	eMessageActivity_AnswerGetReward_C				= 0x2109;		// 领取答题奖励请求
	eMessageActivity_AnswerGetReward_S				= 0x210A;		// 领取答题奖励回应
	eMessageActivity_HotPotReport_C				 	= 0x210B;		// 吃火锅结算请求
	eMessageActivity_HotPotReport_S 				= 0x210C;		// 吃火锅结算回应
	eMessageActivity_AnswerRewardList_C				= 0x210D;		// 答题活动奖励统计列表请求
	eMessageActivity_AnswerRewardList_S 			= 0x210E;		// 答题活动奖励统计列表回应

	eMessageActivity_GetBossInfo_C 					= 0x210F;		// 获取BOSS信息
	eMessageActivity_GetBossInfo_S 					= 0x2110;		// BOSS信息返回
	eMessageActivity_GetDamageList_C 				= 0x2111;		// 获取伤害列表
	eMessageActivity_GetDamageList_S 				= 0x2112;		// 伤害列表返回
	eMessageActivity_NotifyBossHp_S 				= 0x2113;		// 通知BOSS血量
	eMessageActivity_BossRevive_C 					= 0x2114;		// 世界BOSS复活
	eMessageActivity_BossRevive_S 					= 0x2115;		// 世界BOSS复活返回
	eMessageActivity_BossInspire_C 					= 0x2116;		// 世界BOSS鼓舞
	eMessageActivity_BossInspire_S 					= 0x2117;		// 世界BOSS鼓舞返回
	eMessageActivity_EnterBossHall_C 				= 0x2118;		// 进入世界BOSS场景
	eMessageActivity_HotPotReportStart_C 			= 0x2119;		// 火锅活动开始请求
	eMessageActivity_HotPotReportStart_S 			= 0x211A;		// 火锅活动开始回应
	eMessageActivity_AnswerActivityStart_C 			= 0x211B;		// 答题活动开始请求
	eMessageActivity_AnswerActivityStart_S 			= 0x211C;		// 答题活动开始回应
};

//
// 错误码定义
//

enum ErrorcodeActivity
{
	eErrorcodeActivity_Success 						= 0x000000;		// 成功

	eErrorcodeActivity_LVNotEnough					= 0x210301;		// 活动等级不足
	eErrorcodeActivity_LVMoneyNotEnough				= 0x210302;		// 魂玉不足
	eErrorcodeActivity_BuyTimesLimit				= 0x210303;		// 购买次数已达上限
	eErrorcodeActivity_ActivityNotOpen 				= 0x210304;		// 活动今日暂未开放
	eErrorcodeActivity_CannotBuyTimes				= 0x210305;		// 此活动不支持次数购买
	eErrorcodeActivity_GoldExpSortInvalid 			= 0x210306;		// 活动类别不对

	eErrorcodeActivity_AnswerNotStart				= 0x210501;		// 答题活动还未开始
	eErrorcodeActivity_AnswerHasEnd					= 0x210502;		// 答题活动已经结束
	eErrorcodeActivity_AnswerNotOpen                = 0x210503;		// 答题活动暂未开放
	eErrorcodeActivity_AnswerLVNotEnough            = 0x210504;		// 活动等级不足
	eErrorcodeActivity_AnswerSortInvalid 			= 0x210505;		// 活动类别不对

	eErrorcodeActivity_AnswerNotOpen1				= 0x210703;		// 答题活动还未开始
	eErrorcodeActivity_AnswerLVNotEnough1           = 0x210704;		// 活动等级不足
	eErrorcodeActivity_AnswerInvalidID				= 0x210705;		// 非法的题目ID
	eErrorcodeActivity_AnswerHasFinish 				= 0x210706;		// 已经完成全部的问题
	eErrorcodeActivity_HasAnswered					= 0x210707;		// 该题目已经答过了
	eErrorcodeActivity_AnswerSortInvalid1 			= 0x210708;		// 活动类别不对
	eErrorcodeActivity_AnswerNotGoing 				= 0x210709; 	// 不在活动时间内

	eErrorcodeActivity_AnswerRewardNotOpen 			= 0x210901;		// 答题活动暂未开放
	eErrorcodeActivity_AnswerRewardGoted			= 0x210904;		// 答题奖励已经领取
	eErrorcodeActivity_AnswerRewardNo 				= 0x210905;		// 没有对应奖励
	eErrorcodeActivity_AnswerLVNotEnough2 			= 0x210906;		// 活动等级不足
	eErrorcodeActivity_AnswerSortInvalid2 			= 0x210907;		// 活动类别不对
	eErrorcodeActivity_AnswerNotGoing1 				= 0x210908;		// 不在活动时间内

	eErrorcodeActivity_HotPotNotOpen 				= 0x210B01;		// 吃火锅赢体力活动暂未开放
	eErrorcodeActivity_HotPotHasNoTimes 			= 0x210B04;		// 活动次数已经用完
	eErrorcodeActivity_HotPotLVNotEnough 			= 0x210B05;		// 活动等级不足
	eErrorcodeActivity_HotPotSortInvalid			= 0x210B06;		// 活动类别不对
	eErrorcodeActivity_HotPotNotGoing 				= 0x210B07;		// 不在活动时间内

	eErrorcodeActivity_AnswerRewardListNotOpen 		= 0x210D01;		// 答题活动暂未开放
	eErrorcodeActivity_AnswerLVNotEnough3 			= 0x210D06;		// 活动等级不足
	eErrorcodeActivity_AnswerSortInvalid3 			= 0x210D07;		// 活动类别不对
	eErrorcodeActivity_AnswerNotGoing2 				= 0x210D08;		// 不在活动时间内

	eErrorcodeActivity_BossNotOpen1 				= 0x210F01;		// 世界BOSS暂未开放
	eErrorcodeActivity_BossNotStart1 				= 0x210F02;		// 世界BOSS还未开始
	eErrorcodeActivity_BossHasEnd1 					= 0x210F03;		// 世界BOSS已经结束
	eErrorcodeActivity_BossLevelNotEnough1 			= 0x210F04;		// 世界BOSS等级未达到
	eErrorcodeActivity_BossSortInvalid 				= 0x210F05;		// 活动类别不对

	eErrorcodeActivity_BossNotOpen4 				= 0x211102;		// 世界BOSS暂未开放
	eErrorcodeActivity_BossNotStart4 				= 0x211103;		// 世界BOSS还未开始
	eErrorcodeActivity_BossHasEnd4 					= 0x211104;		// 世界BOSS已经结束
	eErrorcodeActivity_BossLevelNotEnough4 			= 0x211105;		// 世界BOSS等级未达到
	eErrorcodeActivity_BossSortInvalid2 			= 0x211106;		// 活动类别不对

	eErrorcodeActivity_BossNotOpen2 				= 0x211401;		// 世界BOSS暂未开放
	eErrorcodeActivity_BossNotStart2 				= 0x211402;     // 世界BOSS还未开始
	eErrorcodeActivity_BossHasEnd2 					= 0x211403;		// 世界BOSS已经结束
	eErrorcodeActivity_BossLevelNotEnough2 			= 0x211404;		// 世界BOSS等级未达到
	eErrorcodeActivity_BossNotInCD 					= 0x211405;		// 不在死亡冷却中
	eErrorcodeActivity_BossMoneyNotEnough1 			= 0x211406;		// 魂玉不足
	eErrorcodeActivity_BossSortInvalid3 			= 0x211407;		// 活动类别不对

	eErrorcodeActivity_BossNotOpen3 				= 0x211601;		// 世界BOSS暂未开放
	eErrorcodeActivity_BossNotStart3 				= 0x211602;     // 世界BOSS还未开始
	eErrorcodeActivity_BossHasEnd3 					= 0x211603;		// 世界BOSS已经结束
	eErrorcodeActivity_BossLevelNotEnough3 			= 0x211604;		// 世界BOSS等级未达到
	eErrorcodeActivity_BossLevelLimit 		 		= 0x211605;		// 鼓舞已达上限
	eErrorcodeActivity_BossMoneyNotEnough2 			= 0x211606;		// 魂玉不足
	eErrorcodeActivity_BossInspireFaild 			= 0x211607;		// 鼓舞失败
	eErrorcodeActivity_BossSortInvalid4 			= 0x211608;		// 活动类别不对

	eErrorcodeActivity_BeenInBossScene				= 0x211801;		// 您已经在世界BOSS场景中了
	eErrorcodeActivity_BossNotOpen 					= 0x211802;		// 世界BOSS暂未开放
	eErrorcodeActivity_BossNotStart 				= 0x211803;		// 世界BOSS还未开始
	eErrorcodeActivity_BossHasEnd 					= 0x211804;		// 世界BOSS已经结束
	eErrorcodeActivity_BossLevelNotEnough 			= 0x211805;		// 世界BOSS等级未达到
	eErrorcodeActivity_BossSortInvalid5 			= 0x211806;		// 活动类别不对

	eErrorcodeActivity_HotPotStartNotOpen 			= 0x211901;		// 火锅活动暂未开放
	eErrorcodeActivity_HotPotStartNotStart 			= 0x211902;		// 火锅活动还未开始
	eErrorcodeActivity_HotPotStartEnd 				= 0x211903;		// 火锅活动已经结束
	eErrorcodeActivity_HotPotStartNotLV 			= 0x211904;		// 万事屋等级不足
	eErrorcodeActivity_HotPotStartNotTimes			= 0x211905;		// 活动次数已经用完
	eErrorcodeActivity_HotPotStartSortInvalid		= 0x211906;		// 活动类别不对

	eErrorcodeActivity_AnswerStartNotOpen 			= 0x211B01;		// 答题活动暂未开放
	eErrorcodeActivity_AnswerStartSortInvalid 		= 0x211B02;		// 活动类别不对
	eErrorcodeActivity_AnswerStartNotLV 			= 0x211B03;		// 万事屋等级不足
	eErrorcodeActivity_AnswerStartNotStart 			= 0x211B04;		// 答题活动还未开始
	eErrorcodeActivity_AnswerStartEnd 				= 0x211B05;		// 答题活动已经结束
};

// 获取活动列表
message MessageGetActivityListRequest
{
	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_GetActivityList_C ];
};
message MessageGetActivityListResponse
{
	message Activity
	{
		required uint32  		id 					= 1; 			// 活动id
		optional string 		info 				= 2;			// 活动信息
	};

	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_GetActivityList_S ];
	repeated Activity 			list 				= 2;			// 活动列表
};

// 购买金钱经验副本次数
message MessageBuyGoldExpTimesRequest
{
	optional MessageActivity	id 					= 1 [ default = eMessageActivity_BuyGoldExpTimes_C ];
	required uint32 			activity 			= 2; 			// 活动id
};
message MessageBuyGoldExpTimesResponse
{
	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_BuyGoldExpTimes_S ];
	required uint32 			activity 			= 2;			// 活动id
	required uint32 			times 				= 3;			// 活动次数
};

// 答题活动列表
message MessageAnswerActivityListRequest
{
	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_AnswerActivityList_C ];
	required uint32 			activity 			= 2;			// 活动id
};
message MessageAnswerActivityListResponse
{
	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_AnswerActivityList_S ];
	required uint32 			activity 			= 2;					// 活动id
	required uint32 			rightcount			= 3;					// 已经答对的题目数
	required uint32 			wrongcount			= 4;					// 已经答错的题目数
	required uint32 			gotflag  			= 5;					// 领取标志
	repeated uint32 			questions			= 6 [ packed = true ]; 	// 问题列表
};

// 答题
message MessageAnswerActivityRequest
{
	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_AnswerActivity_C ];
	required uint32 			activity 			= 2;					// 活动id
	required uint32 			questionid 			= 3;					// 问题id
	required uint32 			index 				= 4;					// 答案索引
};
message MessageAnswerActivityResponse
{
	message RewardOne
	{
		required uint32 		prop 				= 1;					// 属性类型
		required uint32 		value 				= 2;					// 属性值
	};

	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_AnswerActivity_S ];
	required uint32 			activity 			= 2;					// 活动id
	required uint32 			questionid 			= 3;					// 问题索引
	required uint32 			index 				= 4;					// 正确答案索引
	repeated RewardOne 			reward 				= 5;					// 答对一题的属性奖励
};

// 答题奖励领取
message MessageAnswerDrawRewardRequest
{
	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_AnswerGetReward_C ];
	required uint32 			activity 			= 2;					// 活动id
};
message MessageAnswerDrawRewardResponse
{
	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_AnswerGetReward_S ];
	required uint32 			activity 			= 2;					// 活动id
	repeated Resource   		rewards 	 		= 3;					// 奖励列表
	required uint32 			flag 				= 4;					// 领奖标志
};

// 答题活动奖励统计列表
message MessageAnswerRewardListRequest
{
	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_AnswerRewardList_C ];
	required uint32 			activity 			= 2;					// 活动id
};
message MessageAnswerRewardListResponse
{
	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_AnswerRewardList_S ];
	required uint32 			activity 			= 2;					// 活动id
	repeated Resource 			rewards 			= 3;					// 奖励统计列表
};

// 吃火锅结算
message MessageHotPotReportRequest
{
	optional MessageActivity    id					= 1 [ default = eMessageActivity_HotPotReport_C ];
	required uint32 			type 				= 2;					// 1 :跳过游戏, 2: 游戏结束
	optional uint32 			score 				= 3 [ default = 0 ];	// 火锅积分
	required uint32 			activity 			= 4;					// 活动id
};
message MessageHotPotReportResponse
{
	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_HotPotReport_S ];
	required uint32 			times 				= 2;					// 活动次数
	required uint32 			strength 			= 3;					// 活动体力值
};

// 世界BOSS信息返回
message MessageGetBossInfoRequest
{
	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_GetBossInfo_C ];
	required uint32 			activityid 			= 2;					// 活动ID
};
message MessageGetBossInfoResponse
{
	optional MessageActivity 	id 				 	= 1 [ default = eMessageActivity_GetBossInfo_S ];
	required uint32 			damage 				= 2;					// 总伤害
	required uint32 			bosshp 				= 3;					// BOSS当前血量
	required uint32 			totalhp 			= 4;					// BOSS总血量
	required uint64 			revivetime 			= 5;					// 复活倒计时
	required uint32 			inspirevalue 		= 6;					// 鼓舞效果
	required uint32 			attacktimes 		= 8;					// 挑战次数
	required uint32 			revivetimes 		= 9;					// 复活次数
};

// 伤害列表
message MessageDamageListRequest
{
	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_GetDamageList_C ];
	required uint32 			activityid 			= 2;					// 活动ID
};
message MessageDamageListResponse
{
	message Damage
	{
		required uint64 		roleid 				= 1;					// 角色ID
		required string 		rolename 			= 2;					// 角色名
		required uint32 		damage 				= 3;					// 伤害值
	};

	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_GetDamageList_S ];
	required uint32 			damage 				= 2;					// 总伤害值
	repeated Damage 			damagelist 			= 3;					// 伤害列表
};

// 通知BOSS血量
message MessageBossHpNotify
{
	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_NotifyBossHp_S ];
	required uint32 			hp 					= 2;					// 当前血量
	required uint32 			totalhp 			= 3;					// 总血量
};

// 复活
message MessageBossReviveRequest
{
	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_BossRevive_C ];
	required uint32 			activityid 			= 2;					// 活动ID
};
message MessageBossReviveResponse
{
	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_BossRevive_S ];
	required uint32 			times 				= 2;					// 复活次数
};

// 鼓舞
message MessageBossInspireRequest
{
	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_BossInspire_C ];
	required uint32 			activityid 			= 2;					// 活动ID
};
message MessageBossInspireResponse
{
	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_BossInspire_S ];
	required uint32 			value 				= 2;					// 鼓舞的返回值
};

// 进入世界BOSS场景
message MessageEnterBossHall
{
	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_EnterBossHall_C ];
	required uint32 			activityid 			= 2;					// 活动ID
};

// 火锅活动开始请求
message MessageHotPotReportStartRequest
{
	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_HotPotReportStart_C ];
	required uint32 			activityid 			= 2; 					// 活动id
};
message MessageHotPotReportStartResponse
{
	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_HotPotReportStart_S ];
};

// 答题活动开始请求
message MessageAnswerActivityStartRequest
{
	optional MessageActivity 	id 					= 1 [ default = eMessageActivity_AnswerActivityStart_C ];
	required uint32 			activityid 			= 2;					// 活动id
};
message MessageAnswerActivityStartResponse
{
	optional MessageActivity    id 					= 1 [ default = eMessageActivity_AnswerActivityStart_S ];
};
