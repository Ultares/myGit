package msg.battle;

import "base.proto";
import "battletype.proto";

enum MessageBattle
{
	eMessageBattle_IntoLevels_C 			= 0x2000;		// 进入普通关卡
	eMessageBattle_IntoLevels_S 			= 0x2001;		// 进入普通关卡返回

	eMessageBattle_Result_C 				= 0x2002;		// 战斗结果(汇报)
	eMessageBattle_Result_S 				= 0x2003;		// 战斗结果(确认)

	eMessageBattle_Challenge_C 				= 0x2004;		// 竞技场挑战
	eMessageBattle_Challenge_S				= 0x2005;		// 竞技场挑战返回
	eMessageBattle_EnterGoldExpLevel_C 		= 0x2006;		// 进入金钱副本
	eMessageBattle_EnterGoldExpLevel_S		= 0x2007;		// 进入金钱副本回应
	eMessageBattle_EnterTowerLevel_C 		= 0x2008;		// 进入爬塔副本
	eMessageBattle_EnterTowerLevel_S 		= 0x2009;		// 进入爬塔副本返回
	eMessageBattle_StartTowerRob_C 			= 0x200A;		// 开始爬塔掠夺
	eMessageBattle_StartTowerRob_S 			= 0x200B;		// 掠夺副本返回
	eMessageBattle_EnterRichLevel_C 		= 0x200C;		// 进入大富翁副本
	eMessageBattle_EnterRichLevel_S 		= 0x200D;		// 进入大富翁副本返回
	eMessageBattle_EnterGuardLevel_C 		= 0x200E;		// 进入守护副本
	eMessageBattle_EnterGuardLevel_S 		= 0x200F;		// 进入守护副本返回

	eMessageBattle_AttackBoss_C 			= 0x2010;		// 攻击BOSS
	eMessageBattle_AttackBoss_S 			= 0x2011;		// 攻击BOSS返回

	eMessageBattle_StartRob_C				= 0x2012;		// 开始拦截请求
	eMessageBattle_StartRob_S 				= 0x2013;		// 开始拦截回应
	eMessageBattle_Revenge_C 				= 0x2014;		// 复仇请求
	eMessageBattle_Revenge_S 				= 0x2015;		// 复仇回应

	eMessageBattle_TeamBattle_C 			= 0x2016;		// 开始组队战请求
	eMessageBattle_TeamBattle_S 			= 0x2017;		// 开始组队战回应
};

enum ErrorcodeBattle
{
	eErrorcodeBattle_Success 				= 0x000000;		// 成功

	eErrorcodeBattle_IntoLevelInnerError	= 0x200000;		// 内部出错
	eErrorcodeBattle_IntoLevelIsFighting	= 0x200001;		// 角色正在战斗
	eErrorcodeBattle_IntoLevelPreNotFinish	= 0x200002;		// 前置关卡或者章节未完成
	eErrorcodeBattle_IntoLevelStrNotEnough	= 0x200003;		// 体力不足
	eErrorcodeBattle_IntoLevelTimesNotEnough= 0x200004;		// 副本次数不足
	eErrorcodeBattle_IntoLevelLVLimit 		= 0x200005;		// 关卡等级限制
	eErrorcodeBattle_HidenLevelOnlyOneTime	= 0x200006;		// 隐藏关卡只能进入一次
	eErrorcodeBattle_HidenLevelMustPerfectly= 0x200007;		// 隐藏关卡的前置关卡必须满星通关
	eErrorcodeBattle_ResultInnerError		= 0x200200;		// 内部出错
	eErrorcodeBattle_ResultNotInCopy		= 0x200201;		// 不在副本中
	eErrorcodeBattle_ChallengeIsFighting 	= 0x200401;		// 角色正在战斗中
	eErrorcodeBattle_ChallengeCantFoundRecord= 0x200402;	// 竞技场未开放
	eErrorcodeBattle_ArenaSelfLocked		= 0x200403;		// 自己处于锁定状态
	eErrorcodeBattle_ChallengeInCD			= 0x200404;		// 处于竞技场CD中
	eErrorcodeBattle_ChallengeNoTimes		= 0x200405;		// 挑战次数已经用完
	eErrorcodeBattle_ArenaCantPromote		= 0x200406;		// 不能参加竞技场晋级赛
	eErrorcodeBattle_CantFoundOpponent		= 0x200407;		// 晋级时没有找到对手
	eErrorcodeBattle_CantChallengePlace		= 0x200408;		// 不能挑战该排名的玩家
	eErrorcodeBattle_PlaceIsInvalid			= 0x200409;		// 您挑战的排名非法
	eErrorcodeBattle_OpponentNotMatched		= 0x20040A;		// 挑战的不是您预期的对手
	eErrorcodeBattle_OppoCantFoundRecord	= 0x20040B;		// 对手竞技场未开放
	eErrorcodeBattle_ArenaOpponentLocked	= 0x20040C;		// 对手处于锁定状态
	eErrorcodeBattle_ChallengeInnerError 	= 0x20040D;		// 挑战内部出错
	eErrorcodeBattle_GoldActNotOpen 		= 0x200601;		// 活动今日暂未开放
	eErrorcodeBattle_GoldActNotBegin		= 0x200602;		// 活动还未开始
	eErrorcodeBattle_GoldActEnd				= 0x200603;		// 活动已经结束
	eErrorcodeBattle_GoldTimesLimit 		= 0x200604;		// 进入次数不足
	eErrorcodeBattle_GoldLvNotEnough 		= 0x200605;		// 等级不足无法进入
	eErrorcodeBattle_GoldInvalidLevelID		= 0x200606;		// 非法的难度副本ID
	eErrorcodeBattle_GoldInnerError			= 0x200607;		// 进入副本内部错误
	eErrorcodeBattle_GoldSortInvalid 		= 0x200608;		// 活动类别不对
	eErrorcodeBattle_GoldIsInFight 			= 0x200609;		// 角色正在战斗
	eErrorcodeBattle_GoldNoStrength			= 0x20060A;		// 体力不足
	eErrorcodeBattle_GoldConfigError		= 0x200610;		// 活动配置出错啦
	eErrorcodeBattle_CannotFuckThisFloor 	= 0x200801;		// 亲～您是爬不上这一层滴...
	eErrorcodeBattle_FloorConfigError		= 0x200802;		// 咦...这个问题得找策划小哥了
	eErrorcodeBattle_NotFoundLevelInfo 		= 0x200803;		// 稍等...码农大人写出问题了
	eErrorcodeBattle_TowerIsInFight			= 0x200804;		// 角色正在战斗
	eErrorcodeBattle_FloorIsInvalid			= 0x200A01;		// 您想掠夺的楼层非法
	eErrorcodeBattle_CantRobThisFloor		= 0x200A02;		// 您不能掠夺本层
	eErrorcodeBattle_NobodyHosting 			= 0x200A03;		// 您选择的位置没有人挂机
	eErrorcodeBattle_TowerRobIsInFight		= 0x200A04;		// 角色长在战斗
	eErrorcodeBattle_TowerRobInCD 			= 0x200A05;		// 您还处于CD中
	eErrorcodeBattle_HostSlotIsBusy			= 0x200A06;		// 您选择的位置正在被别人掠夺
	eErrorcodeBattle_TowerRobNoTimes 		= 0x200A07;		// 您今天没有掠夺次数了
	eErrorcodeBattle_NotFoundHostRecord		= 0x200A08;		// 没有找到您的挂机记录
	eErrorcodeBattle_HostOtherFloor			= 0x200A09;		// 您现在还在其他楼层挂机，请先取消再试
	eErrorcodeBattle_NotFoundTowerRobLevel 	= 0x200A0A;		// 没有找到掠夺副本信息
	eErrorcodeBattle_RichStateInvalid		= 0x200C00;		// 您没有触发突袭状态
	eErrorcodeBattle_RichEventInvalid		= 0x200C01;		// 您触发的突袭事件非法
	eErrorcodeBattle_CantEnterRichLevel		= 0x200C02;		// 非常抱歉，您还是不能进入突袭战斗
	eErrorcodeBattle_RichInnerError			= 0x200C03;		// 突袭战斗内部出错
	eErrorcodeBattle_RichMatchedFailed 		= 0x200C04;		// 没有为您匹配到合适的对手
	eErrorcodeBattle_RichIsInFight			= 0x200C05;		// 角色正在战斗
	eErrorcodeBattle_GuardActNotOpen 		= 0x200E01;		// 活动今日暂未开放
	eErrorcodeBattle_GuardActNotBegin		= 0x200E02;		// 活动还未开始
	eErrorcodeBattle_GuardActEnd			= 0x200E03;		// 活动已经结束
	eErrorcodeBattle_GuardTimesLimit 		= 0x200E04;		// 进入次数不足
	eErrorcodeBattle_GuardLvNotEnough 		= 0x200E05;		// 等级不足无法进入
	eErrorcodeBattle_GuardInvalidLevelID	= 0x200E06;		// 非法的难度副本ID
	eErrorcodeBattle_GuardInnerError		= 0x200E07;		// 进入副本内部错误
	eErrorcodeBattle_GuardSortInvalid 		= 0x200E08;		// 活动类别不对
	eErrorcodeBattle_GuardIsInFight			= 0x200E09;		// 角色正在战斗
	eErrorcodeBattle_GuardNoStrength		= 0x200E0A;		// 体力不足
	eErrorcodeBattle_GuardConfigError		= 0x200E10;		// 活动配置出错啦
	eErrorcodeBattle_BossActNotOpen 		= 0x201001;		// 活动未开放
	eErrorcodeBattle_BossActNotBegin		= 0x201002;		// 活动还未开始
	eErrorcodeBattle_BossActEnd				= 0x201003;		// 活动已经结束
	eErrorcodeBattle_BossActLvNotEnough		= 0x201004;		// 等级不足无法进入
	eErrorcodeBattle_NotInBossHall			= 0x201005;		// 亲，您不在BOSS大厅中哦...
	eErrorcodeBattle_HashBeenInReviveCD		= 0x201006;		// 丫的你还没有复活呢, 就想搞BOSS, 美得你...
	eErrorcodeBattle_NotNearByBoss 			= 0x201007;		// 亲, 您和BOSS没有零距离接触哦...
	eErrorcodeBattle_BossIsInFight			= 0x201008;		// 稍等, BOSS正在被其他人操呢...
	eErrorcodeBattle_BossIsDead				= 0x201009;		// 不好意思, BOSS已经挂比了
	eErrorcodeBattle_BossConfigError		= 0x20100A;		// BOSS配置出错啦
	eErrorcodeBattle_BossInvalidLevelID		= 0x20100B;		// BOSS关卡非法
	eErrorcodeBattle_BossInnerError			= 0x20100C;		// 世界BOSS内部错误
	eErrorcodeBattle_BossSortInvalide 		= 0x20100D;		// 活动类别不对
	eErrorcodeBattle_BossIsInFight2 		= 0x20100E;		// 角色正在战斗

	eErrorcodeBattle_EscortNotOpen			= 0x201200;		// 系统暂未开放
	eErrorcodeBattle_RobbedTimesLimit 		= 0x201201;		// 拦截次数已达上限
	eErrorcodeBattle_TargetCanNotRobbed 	= 0x201202;		// 目标不在侦查队列，不可拦截
	eErrorcodeBattle_TargetInvalid 			= 0x201203;		// 目标已经失效
	eErrorcodeBattle_CargoHasDest 			= 0x201204;		// 船货已达目的地，不可拦截
	eErrorcodeBattle_CargoRobbedTimesLimit  = 0x201205;		// 船货拦截次数已达上限
	eErrorcodeBattle_EscortInvalidLevelID 	= 0x201206;		// 关卡非法
	eErrorcodeBattle_EscortInnerError 		= 0x201207;		// 内部错误
	eErrorcodeBattle_CargoNotFind 			= 0x201208;		// 未找到船货记录
	eErrorcodeBattle_RobIsInFight			= 0x201209;		// 角色正在战斗

	eErrorcodeBattle_EscortNotOpen1 		= 0x201400;		// 系统暂未开放
	eErrorcodeBattle_FriendHasHelped 		= 0x201401;		// 好友已经帮助过了
	eErrorcodeBattle_HelpTimesLimit 		= 0x201402;		// 好友帮助次数已达上限
	eErrorcodeBattle_EscortNotEnd 			= 0x201403;		// 护送还未结束
	eErrorcodeBattle_RobbedRecordNotFind 	= 0x201404;		// 拦截记录未找到
	eErrorcodeBattle_HasRevenged 			= 0x201405;		// 该拦截已复仇
	eErrorcodeBattle_EscortInvalidLevelID1 	= 0x201406;		// 关卡非法
	eErrorcodeBattle_EscortInnerError1 		= 0x201407;		// 内部错误
	eErrorcodeBattle_CargoNotFind1 			= 0x201408;		// 未找到船货记录
	eErrorcodeBattle_RobbedNotFind 			= 0x201409;		// 拦截记录集未找到
	eErrorcodeBattle_CargoNotLoss 			= 0x20140A;		// 船货无损失不能复仇
	eErrorcodeBattle_RevengeNotFriend 		= 0x20140B;		// 不是你的好友
	eErrorcodeBattle_FriendCanNotRobber 	= 0x20140C;		// 不能邀请拦截您的好友复仇
	eErrorcodeBattle_RevengeIsInFight		= 0x20140D;		// 角色正在战斗

	eErrorcodeBattle_TeamNotOpen 			= 0x201600;		// 系统暂未开放
	eErrorcodeBattle_TeamIsInFight			= 0x201601;		// 角色正在战斗
	eErrorcodeBattle_TeamNotIn 				= 0x201602;		// 不在队伍中
	eErrorcodeBattle_TeamCooling 			= 0x201603;		// 正在冷却
	eErrorcodeBattle_TeamInnerError 		= 0x201604;		// 组队内部错误
	eErrorcodeBattle_TeamTimesOver 			= 0x201605;		// 战斗次数已经用完了
};

// 进入普通关卡的请求
message MessageIntoLevelsRequest
{
	optional MessageBattle 			id 		= 1 [ default = eMessageBattle_IntoLevels_C ];
	optional uint32 				level 	= 2;	// 关卡ID
};
// 普通关卡返回
message MessageIntoLevelsResponse
{
	optional MessageBattle 			id 		= 1 [ default = eMessageBattle_IntoLevels_S ];
	required uint32 				level 	= 2;	// 关卡ID
	required uint32 				seed1 	= 3;	// 种子1
	required uint32 				seed2 	= 4;	// 种子2
	required uint32 				seed3 	= 5;	// 种子3
	required uint32 				seed4 	= 6;	// 种子4
	required uint32 				seed5 	= 7;	// 种子5
	required uint32 				seed6 	= 8;	// 种子6
	required CombatGroup			group	= 9;	// 参战的军团信息
	repeated Resource 				drops 	= 10;	// 每波的额外掉落
};

// 战斗结果
message MessageBattleResultRequest
{
	message ShotOrder
	{
		required uint32 	index 			= 1;	// 出手索引
		repeated uint32 	orderlist 		= 2 [packed = true];	//
	};

	optional MessageBattle 			id 		= 1 [ default = eMessageBattle_Result_C ];
	optional BattleResult 			result 	= 2;	// 结果
	optional uint32 				grade 	= 3;	// 评级
	repeated ShotOrder 				orders 	= 4;	// 攻击序列
};
message MessageBattleResultResponse
{
	optional MessageBattle 			id 		= 1 [ default = eMessageBattle_Result_S ];
	optional BattleResult			result 	= 2;	// 结果
	optional uint32 				grade 	= 3;	// 评级
	repeated Resource 				basic 	= 4;	// 基础奖励
	repeated Resource 				extra 	= 5;	// 额外掉落奖励
};

// 竞技场挑战
message MessageChallengeRequest
{
	enum Method
	{
		eMethod_Promote				= 1;	// 晋级赛
		eMethod_Challenge 			= 2;	// 普通挑战
	};

	optional MessageBattle 			id 		= 1 [ default = eMessageBattle_Challenge_C ];
	required Method 				method 	= 2;	// 挑战方式
	optional uint32 				place 	= 3;	// 挑战位置
	optional uint64 				roleid	= 4;	// 挑战位置的角色ID
};
message MessageChallengeResponse
{
	optional MessageBattle 			id 		= 1 [ default = eMessageBattle_Challenge_S ];
	required uint32 				seed1 	= 2;	// 种子1
	required uint32 				seed2 	= 3;	// 种子2
	required uint32 				seed3 	= 4;	// 种子3
	required uint32 				seed4 	= 5;	// 种子4
	required uint32 				seed5 	= 6;	// 种子5
	required uint32 				seed6 	= 7;	// 种子6
	required CombatGroup 			self 	= 8;	// 自己的军团信息
	required CombatGroup 			other 	= 9;	// 对手的军团信息
	required uint32 				place 	= 10;	// 对手的排名
};

// 进入金币副本
message MessageEnterGoldExpLevelRequest
{
	optional MessageBattle 			id 		= 1 [ default = eMessageBattle_EnterGoldExpLevel_C ];
	required uint32 				activity= 2;	// 活动id
	required uint32 				level 	= 3;	// 副本难度id
};
message MessageEnterGoldExpLevelResponse
{
	optional MessageBattle 			id 		= 1 [ default = eMessageBattle_EnterGoldExpLevel_S ];
	required uint32 				level 	= 2;	// 关卡ID
	required uint32 				seed1 	= 3;	// 种子1
	required uint32 				seed2 	= 4;	// 种子2
	required uint32 				seed3 	= 5;	// 种子3
	required uint32 				seed4 	= 6;	// 种子4
	required uint32 				seed5 	= 7;	// 种子5
	required uint32 				seed6 	= 8;	// 种子6
	required CombatGroup			group	= 9;	// 参战的军团信息
	repeated Resource 				drops 	= 10;	// 每波的额外掉落
};

// 进入爬塔副本
message MessageEnterTowerLevelRequest
{
	optional MessageBattle 			id 	 	= 1 [ default = eMessageBattle_EnterTowerLevel_C ];
	required uint32 				floor 	= 2;	// 楼层
};
message MessageEnterTowerLevelResponse
{
	optional MessageBattle 			id 		= 1 [ default = eMessageBattle_EnterTowerLevel_S ];
	required uint32 				floor 	= 2;	// 楼层
	required uint32 				level 	= 3;	// 关卡ID
	required uint32 				seed1 	= 4;	// 种子1
	required uint32 				seed2 	= 5;	// 种子2
	required uint32 				seed3 	= 6;	// 种子3
	required uint32 				seed4 	= 7;	// 种子4
	required uint32 				seed5 	= 8;	// 种子5
	required uint32 				seed6 	= 9;	// 种子6
	required CombatGroup			group	= 10;	// 参战的军团信息
	repeated Resource 				drops 	= 11;	// 每波的额外掉落
};

// 开始爬塔掠夺
message MessageStartTowerRobRequest
{
	optional MessageBattle 			id 		= 1 [ default = eMessageBattle_StartTowerRob_C ];
	required uint32 				floor 	= 2;	// 楼层
	required uint32 				slot 	= 3;	// 位置
};
message MessageStartTowerRobResponse
{
	optional MessageBattle 			id 	 	= 1 [ default = eMessageBattle_StartTowerRob_S ];
	required uint32 				floor 	= 2;	// 楼层
	required uint32 				slot 	= 3;	// 位置
	required uint32 				level 	= 4;	// 关卡ID
	required uint32 				weaken 	= 5;	// 削弱百分比
	required uint32 				seed1 	= 6;	// 种子1
	required uint32 				seed2 	= 7;	// 种子2
	required uint32 				seed3 	= 8;	// 种子3
	required uint32 				seed4 	= 9;	// 种子4
	required uint32 				seed5 	= 10;	// 种子5
	required uint32 				seed6 	= 11;	// 种子6
	required CombatGroup 			self 	= 12;	// 自己的军团信息
	required CombatGroup 			other 	= 13;	// 对手的军团信息
};

// 进入大富翁副本
message MessageEnterRichLevelRequest
{
	optional MessageBattle 			id 		= 1 [ default = eMessageBattle_EnterRichLevel_C ];
};
message MessageEnterRichLevelResponse
{
	optional MessageBattle 			id 		= 1 [ default = eMessageBattle_EnterRichLevel_S ];
	required uint32 				level 	= 2;	// 关卡ID
	required uint32 				seed1 	= 3;	// 种子1
	required uint32 				seed2 	= 4;	// 种子2
	required uint32 				seed3 	= 5;	// 种子3
	required uint32 				seed4 	= 6;	// 种子4
	required uint32 				seed5 	= 7;	// 种子5
	required uint32 				seed6 	= 8;	// 种子6
	required CombatGroup 			self 	= 9;	// 自己的军团信息
	required CombatGroup 			other 	= 10;	// 对手的军团信息
};

// 进入守护副本
message MessageEnterGuardLevelRequest
{
	optional MessageBattle 			id 		= 1 [ default = eMessageBattle_EnterGuardLevel_C ];
	required uint32 				activity= 2;	// 活动id
	required uint32 				level 	= 3;	// 副本难度id
};
message MessageEnterGuardLevelResponse
{
	optional MessageBattle 			id 		= 1 [ default = eMessageBattle_EnterGuardLevel_S ];
	required uint32 				level 	= 2;	// 关卡ID
	required uint32 				seed1 	= 3;	// 种子1
	required uint32 				seed2 	= 4;	// 种子2
	required uint32 				seed3 	= 5;	// 种子3
	required uint32 				seed4 	= 6;	// 种子4
	required uint32 				seed5 	= 7;	// 种子5
	required uint32 				seed6 	= 8;	// 种子6
	required CombatGroup			group	= 9;	// 参战的军团信息
	repeated Resource 				drops 	= 10;	// 每波的额外掉落
};

// 攻击BOSS
message MessageAttackBossRequest
{
	optional MessageBattle 			id 		= 1 [ default = eMessageBattle_AttackBoss_C ];
	required uint32 				activity= 2;	// 活动id
	required uint32 				levelid = 3;	// 关卡ID
};
message MessageAttackBossResponse
{
	optional MessageBattle  		id 		= 1 [ default = eMessageBattle_AttackBoss_S ];
	required uint32 				level 	= 2;	// 关卡ID
	required uint32 				seed1 	= 3;	// 种子1
	required uint32 				seed2 	= 4;	// 种子2
	required uint32 				seed3 	= 5;	// 种子3
	required uint32 				seed4 	= 6;	// 种子4
	required uint32 				seed5 	= 7;	// 种子5
	required uint32 				seed6 	= 8;	// 种子6
	required CombatGroup			group	= 9;	// 参战的军团信息
	required uint32 				bosshp 	= 10;	// BOSS当前血量
	required uint32 				maxhp 	= 11;	// BOSS最大血量
	required uint32 				insbuff = 12;	// 鼓舞BUFF
	required uint32 				bufflv	= 13;	// 鼓舞BUFF的等级
};

// 拦截
message MessageStartRobRequest
{
	optional MessageBattle 			id 		= 1 [ default = eMessageBattle_StartRob_C ];
	required uint64 				owner 	= 2;	// 被拦截者id
};
message MessageStartRobResponse
{
	optional MessageBattle 			id 			= 1 [ default = eMessageBattle_StartRob_S ];
	optional uint32 				buff 		= 2 [ default = 0 ];	// buff
	optional uint32 				level 		= 3 [ default = 0 ];	// buff等级
	required uint32 				seed1 		= 4;					// 种子1
	required uint32 				seed2 		= 5;					// 种子2
	required uint32 				seed3 		= 6;					// 种子3
	required uint32 				seed4 		= 7;					// 种子4
	required uint32 				seed5 		= 8;					// 种子5
	required uint32 				seed6 		= 9;					// 种子6
	required CombatGroup 			self 		= 10;					// 自己的军团信息
	required CombatGroup 			other 		= 11;					// 对手的军团信息
};

// 复仇
message MessageRevengeRequest
{
	optional MessageBattle 		id 			= 1 [ default = eMessageBattle_Revenge_C ];
	required uint64 			robber 		= 2;					// 拦截者id
	required uint32 			times 		= 3;					// 护送次数
	optional uint64 			helper 		= 4 [ default = 0 ];	// 复仇好友
	required uint32 			robtimes 	= 5;					// 拦截者拦截次数
};
message MessageRevengeResponse
{
	optional MessageBattle 			id 		= 1 [ default = eMessageBattle_Revenge_S ];
	required uint32 				seed1 	= 2;					// 种子1
	required uint32 				seed2 	= 3;					// 种子2
	required uint32 				seed3 	= 4;					// 种子3
	required uint32 				seed4 	= 5;					// 种子4
	required uint32 				seed5 	= 6;					// 种子5
	required uint32 				seed6 	= 7;					// 种子6
	required CombatGroup 			self 	= 8;					// 自己的军团信息
	required CombatGroup 			other 	= 9;					// 对手的军团信息
};

// 组队
message MessageTeamBattleRequest
{
	optional MessageBattle 			id 		= 1 [ default = eMessageBattle_TeamBattle_C ];
};
message MessageTeamBattleResponse
{
	optional MessageBattle 			id 		= 1 [ default = eMessageBattle_TeamBattle_S ];
	required uint32 				seed1 	= 2;					// 种子1
	required uint32 				seed2 	= 3;					// 种子2
	required uint32 				seed3 	= 4;					// 种子3
	required uint32 				seed4 	= 5;					// 种子4
	required uint32 				seed5 	= 6;					// 种子5
	required uint32 				seed6 	= 7;					// 种子6
	required uint32 				level 	= 8;					// 组队平均等级
	required CombatGroup 			self 	= 9;					// 自己的军团信息
};
